jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from project(':Fixworks-Core').sourceSets.main.output
}

task devJar(type: Jar) {
	archiveClassifier = 'dev'
	from sourceSets.main.output
	
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from project(':Fixworks-Core').sourceSets.main.output
}

task sourcesJar(type: Jar) {
	archiveClassifier = 'dev-sources'
	from sourceSets.main.allSource
	
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from project(':Fixworks-Core').sourceSets.main.allSource
	
}

tasks.withType(Jar) {
	if (name.equals('jar') || name.equals('devJar')) {
		manifest {
			attributes([
					"Implementation-Title": project.name,
					"Implementation-Version": "${project.version}",
					"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
			])
		}
	}
}

artifacts {
	archives devJar
	archives sourcesJar
}